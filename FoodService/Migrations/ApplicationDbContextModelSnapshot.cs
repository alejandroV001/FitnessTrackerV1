// <auto-generated />
using System;
using FoodService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FoodService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FoodService.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Calories")
                        .HasColumnType("double precision");

                    b.Property<double>("Carbs")
                        .HasColumnType("double precision");

                    b.Property<double>("Fats")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Proteins")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Calories = 165.0,
                            Carbs = 0.0,
                            Fats = 3.6000000000000001,
                            Name = "Chicken Breast",
                            Proteins = 31.0
                        },
                        new
                        {
                            Id = 2,
                            Calories = 130.0,
                            Carbs = 28.0,
                            Fats = 0.29999999999999999,
                            Name = "Rice",
                            Proteins = 2.7000000000000002
                        },
                        new
                        {
                            Id = 3,
                            Calories = 55.0,
                            Carbs = 11.199999999999999,
                            Fats = 0.59999999999999998,
                            Name = "Broccoli",
                            Proteins = 3.7000000000000002
                        },
                        new
                        {
                            Id = 4,
                            Calories = 155.0,
                            Carbs = 1.1000000000000001,
                            Fats = 10.6,
                            Name = "Eggs",
                            Proteins = 13.0
                        },
                        new
                        {
                            Id = 5,
                            Calories = 86.0,
                            Carbs = 20.100000000000001,
                            Fats = 0.10000000000000001,
                            Name = "Sweet Potato",
                            Proteins = 1.6000000000000001
                        },
                        new
                        {
                            Id = 6,
                            Calories = 579.0,
                            Carbs = 21.600000000000001,
                            Fats = 49.899999999999999,
                            Name = "Almonds",
                            Proteins = 21.199999999999999
                        },
                        new
                        {
                            Id = 7,
                            Calories = 59.0,
                            Carbs = 3.6000000000000001,
                            Fats = 0.40000000000000002,
                            Name = "Greek Yogurt",
                            Proteins = 10.0
                        },
                        new
                        {
                            Id = 8,
                            Calories = 160.0,
                            Carbs = 8.5,
                            Fats = 14.699999999999999,
                            Name = "Avocado",
                            Proteins = 2.0
                        },
                        new
                        {
                            Id = 9,
                            Calories = 208.0,
                            Carbs = 0.0,
                            Fats = 13.0,
                            Name = "Salmon",
                            Proteins = 20.0
                        },
                        new
                        {
                            Id = 10,
                            Calories = 23.0,
                            Carbs = 3.6000000000000001,
                            Fats = 0.40000000000000002,
                            Name = "Spinach",
                            Proteins = 2.8999999999999999
                        });
                });

            modelBuilder.Entity("FoodService.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Breakfast",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Lunch",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Dinner",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2025, 1, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Breakfast",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2025, 1, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Lunch",
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2025, 1, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Dinner",
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Breakfast",
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Lunch",
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Dinner",
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2025, 1, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Type = "Breakfast",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FoodService.Models.MealFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodId")
                        .HasColumnType("integer");

                    b.Property<int>("MealId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("MealId");

                    b.ToTable("MealFoods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FoodId = 1,
                            MealId = 1
                        },
                        new
                        {
                            Id = 2,
                            FoodId = 4,
                            MealId = 1
                        },
                        new
                        {
                            Id = 3,
                            FoodId = 2,
                            MealId = 2
                        },
                        new
                        {
                            Id = 4,
                            FoodId = 3,
                            MealId = 2
                        },
                        new
                        {
                            Id = 5,
                            FoodId = 9,
                            MealId = 3
                        },
                        new
                        {
                            Id = 6,
                            FoodId = 5,
                            MealId = 3
                        },
                        new
                        {
                            Id = 7,
                            FoodId = 7,
                            MealId = 4
                        },
                        new
                        {
                            Id = 8,
                            FoodId = 6,
                            MealId = 4
                        },
                        new
                        {
                            Id = 9,
                            FoodId = 8,
                            MealId = 5
                        },
                        new
                        {
                            Id = 10,
                            FoodId = 9,
                            MealId = 5
                        });
                });

            modelBuilder.Entity("FoodService.Models.MealFood", b =>
                {
                    b.HasOne("FoodService.Models.Food", "Food")
                        .WithMany("MealFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodService.Models.Meal", "Meal")
                        .WithMany("MealFoods")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("FoodService.Models.Food", b =>
                {
                    b.Navigation("MealFoods");
                });

            modelBuilder.Entity("FoodService.Models.Meal", b =>
                {
                    b.Navigation("MealFoods");
                });
#pragma warning restore 612, 618
        }
    }
}
